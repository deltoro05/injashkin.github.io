{"componentChunkName":"component---src-templates-blog-post-js","path":"/Sozdanie-saytov/Nastrojka-NPM-dlya-staticheskogo-sajta/","result":{"data":{"site":{"siteMetadata":{"title":"jinv.ru"}},"markdownRemark":{"id":"4965db3b-b199-5276-8ec1-8f1f6d22a0e0","excerpt":"Что мы сделаем Установим и настроим сборку из модулей NPM. Эта сборка позволит нам создавать статические страницы сайта: Создавать на шаблонизаторе Pug разметку…","html":"<h2>Что мы сделаем</h2>\n<p>Установим и настроим сборку из модулей NPM. Эта сборка позволит нам создавать статические страницы сайта:</p>\n<ul>\n<li>Создавать на шаблонизаторе Pug разметку.</li>\n<li>Создавать на препроцессоре Sass стили.</li>\n<li>Использовать самые последние достижения языка JavaScript и при этом не переживать, что какая-то новая функция не будет распознана старым браузером.</li>\n<li>Наполнять содержимое страниц сайта с помощью Markdown разметки.</li>\n<li>Добавлять картинки, значки, шрифты.</li>\n</ul>\n<p>Сама сборка будет выполнять следующие функции:</p>\n<ul>\n<li>Автоматически преобразовывать Pug разметку в разметку HTML</li>\n<li>Автоматически преобразовывать Sass стили и объединять их в один файл <code class=\"language-text\">index.css</code>.</li>\n<li>Все скрипты будут транспилированы и упакованы в один файл <code class=\"language-text\">index.js</code>.</li>\n<li>Автоматически преобразовывать разметку Markdown в понятный для браузеров HTML</li>\n<li>Автоматически оптимизировать картинки, значки, шрифты для увеличения быстродействия готового сайта.</li>\n</ul>\n<h2>Быстрый запуск проекта</h2>\n<p>Чтобы выполнять дальнейшие действия у нас на компьютере должен быть установлен <a href=\"https://nodejs.org/\">Node.js</a> и <a href=\"\">NPM</a>.</p>\n<p>Откроем терминал и создадим каталог нашего будущего проекта, и сразу перейдем в него:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mkdir my-project\ncd my-project</code></pre></div>\n<p>Теперь, если нам нужна система контроля версий Git, то выполним два простых шага, сначала, инициализируем Git:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git init</code></pre></div>\n<p>Затем создадим для Git файл <code class=\"language-text\">.gitignore</code>. В этом файле будем указывать игнорируемые файлы и каталоги, которые не должны попадать в коммиты. Запишем в этом файле следующее:</p>\n<div class=\"gatsby-highlight\" data-language=\".gitignore\"><pre class=\"language-.gitignore\"><code class=\"language-.gitignore\">/node_modules</code></pre></div>\n<p>С настройками Git в этом проекте покончено. Теперь не забываем, хотя бы иногда, делать коммиты.</p>\n<p>Инициализируем npm:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm init -y</code></pre></div>\n<p>Будет создан файл <code class=\"language-text\">package.json</code> с настройками по умолчанию (опция -y). Наиболее полную информацию о файле package.json можно прочитать в <a href=\"https://docs.npmjs.com/cli/v8/configuring-npm/package-json\">документации по npm</a>.</p>\n<h2>Подключение шаблонизатора Pug</h2>\n<p>В настоящее время мало кто верстает на чистом HTML. Придуманы более удобные инструменты для написания разметки и последующем преобразовании ее в HTML. Одним из таких инструментов является <a href=\"https://pugjs.org/\">шаблонизатор Pug</a>.</p>\n<p>Шаблонизатор Pug имеет свой, более удобный синтаксис, на котором пишется разметка. После компиляции синтаксис Pug превращается в HTML код. Установим pug:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm i -D pug-cli</code></pre></div>\n<p>Вместо опции <code class=\"language-text\">i</code> можно написать <code class=\"language-text\">install</code>. Опция <code class=\"language-text\">-D</code> указывает, что устанавливаемый пакет нужен только для разработки и не будет использоваться в производственной сборке. Поэтому, устанавливаемый пакет будет прописан в секции <code class=\"language-text\">\"devDependencies\": {...}</code> файла <code class=\"language-text\">package.json</code>.</p>\n<p>В результате будет создан каталог <code class=\"language-text\">node_modules</code> и файл <code class=\"language-text\">package-lock.json</code>. Каталог <code class=\"language-text\">node_modules</code> содержит все установленные зависимости проекта. Обычно этот каталог не рекомендуется включать в репозитории, что мы и сделали, проигнорировав его в файле <code class=\"language-text\">.gitignore</code>. Файл <code class=\"language-text\">package-lock.json</code> хранит записи о точных версиях установленных зависимостей.</p>\n<p>Добавим в секцию <code class=\"language-text\">\"scripts\"</code> файла <code class=\"language-text\">package.json</code> скрипт с именем <code class=\"language-text\">\"pug\"</code> (знак плюс <code class=\"language-text\">+</code> дальше по тексту будет лишь указывать на добавленные строки кода):</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"my-project\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.0.0\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"main\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"index.js\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n+   <span class=\"token property\">\"pug\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pug --pretty -w src/index.pug -o dist\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"keywords\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"author\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"license\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ISC\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"devDependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"pug-cli\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^1.0.0-alpha6\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>Опция <code class=\"language-text\">--pretty</code> отключает минификацию, что дает на выходе красиво оформленную разметку HTML. По умолчанию, pug переводит код в минимизированный HTML, из которого вырезаны пробелы между тегами, табуляция и перевод строк.</li>\n<li>Ключ <code class=\"language-text\">-w</code> заставляет Pug следить за изменениями в файлах с расширениями <code class=\"language-text\">.pug</code> и как только мы сохраняем измененный файл, то Pug сразу перекомпилирует исходники.</li>\n<li>Путь <code class=\"language-text\">src/index.pug</code> указывает на входной файл. Этот файл после компиляции будет на выходе с расширением <code class=\"language-text\">.html</code>. Если мы укажем каталог, то все файлы с расширением <code class=\"language-text\">.pug</code> этого каталога появятся на выходе с расширением <code class=\"language-text\">.html</code>, что не всегда бывает нужно.</li>\n<li>Ключ <code class=\"language-text\">-o</code> указывает, что откомпилированные файлы будут выводится в другой каталог. Этот каталог нужно указать сразу после ключа, в нашем случае это каталог <code class=\"language-text\">./dist</code>. Если такого каталога не существует, он будет создан.</li>\n<li><code class=\"language-text\">dist</code> - это каталог, в который будут компилироваться файлы. Можно указать имя конкретного файла, который должен получится на выходе, например, <code class=\"language-text\">dist/index.html</code>. Тогда ключ <code class=\"language-text\">-o</code> следует опустить, иначе имя файла будет воспринято как имя каталога. К тому же, все каталоги, указанные в пути должны существовать, так как без ключа <code class=\"language-text\">-o</code> каталоги не создаются.</li>\n</ul>\n<p>Для исходного кода создадим в корне проекта каталог <code class=\"language-text\">src</code>, а в нем создадим файл <code class=\"language-text\">index.pug</code> со следующим содержимым:</p>\n<p><strong>./src/index.pug</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"pug\"><pre class=\"language-pug\"><code class=\"language-pug\"><span class=\"token doctype\">doctype html</span>\n<span class=\"token tag\">html</span>\n  <span class=\"token tag\">head</span>\n    <span class=\"token tag\">meta<span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">charset</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token string\">'utf-8'</span></span><span class=\"token punctuation\">)</span></span></span>\n    <span class=\"token tag\">meta<span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">name</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token string\">'viewport'</span> content<span class=\"token operator\">=</span>'width<span class=\"token operator\">=</span>device<span class=\"token operator\">-</span>width</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">initial-scale</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token number\">1.0</span>'</span><span class=\"token punctuation\">)</span></span></span>\n    <span class=\"token tag\">title</span><span class=\"token punctuation\">=</span><span class=\"token code\"> <span class=\"token string\">'Быстрый запуск Pug'</span></span>\n  <span class=\"token tag\">body</span>\n    <span class=\"token tag\">h1<span class=\"token attr-class\">.name</span></span><span class=\"token punctuation\">=</span><span class=\"token code\"> <span class=\"token string\">'Код написан в шаблонизаторе Pug!'</span></span></code></pre></div>\n<p>Запустим в терминале команду:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm run pug</code></pre></div>\n<p>Будет создан каталог <code class=\"language-text\">./dist</code>, а в нем файл <code class=\"language-text\">index.html</code>, который будет содержать откомпилированный HTML:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Быстрый запуск Pug<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Код написан в шаблонизаторе Pug!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Теперь мы можем открыть в браузере файл <code class=\"language-text\">./dist/index.html</code> и увидим следующее:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Код написан в шаблонизаторе Pug!</code></pre></div>\n<p>Добавим в шаблон миксин. Для этого создадим в каталоге <code class=\"language-text\">src</code> каталог <code class=\"language-text\">components</code>, а в нем файл <code class=\"language-text\">button.pug</code> со следующим содержимым:</p>\n<div class=\"gatsby-highlight\" data-language=\"pug\"><pre class=\"language-pug\"><code class=\"language-pug\"><span class=\"token mixin\"><span class=\"token keyword\">mixin</span> <span class=\"token function\">button</span></span>\n  <span class=\"token tag\">button<span class=\"token attr-class\">.button</span></span><span class=\"token punctuation\">=</span><span class=\"token code\"> <span class=\"token string\">'Кнопка добавлена с помощью миксина'</span></span></code></pre></div>\n<p>Не забываем сохранить.</p>\n<p>В файл <code class=\"language-text\">src/index.pug</code> подключим файл <code class=\"language-text\">button.pug</code> с помощью <code class=\"language-text\">include</code> и вызовем в нужном месте как миксин <code class=\"language-text\">+button()</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"pug\"><pre class=\"language-pug\"><code class=\"language-pug\"><span class=\"token keyword\">include components/button.pug</span>\n\n<span class=\"token doctype\">doctype html</span>\n<span class=\"token tag\">html</span>\n  <span class=\"token tag\">head</span>\n    <span class=\"token tag\">meta<span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">charset</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token string\">'utf-8'</span></span><span class=\"token punctuation\">)</span></span></span>\n    <span class=\"token tag\">meta<span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">name</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token string\">'viewport'</span> content<span class=\"token operator\">=</span>'width<span class=\"token operator\">=</span>device<span class=\"token operator\">-</span>width</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">initial-scale</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token number\">1.0</span>'</span><span class=\"token punctuation\">)</span></span></span>\n\n    <span class=\"token tag\">title</span><span class=\"token punctuation\">=</span><span class=\"token code\"> <span class=\"token string\">'Быстрый запуск Pug'</span></span>\n  <span class=\"token tag\">body</span>\n    <span class=\"token tag\">h1<span class=\"token attr-class\">.name</span></span><span class=\"token punctuation\">=</span><span class=\"token code\"> <span class=\"token string\">'Код написан в шаблонизаторе Pug!'</span></span>\n    <span class=\"token mixin\"><span class=\"token name function\">+button</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span></code></pre></div>\n<p>После сохранения файла перезагрузим страницу браузера и мы увидим заголовок, а под ним кнопку:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"> _____________\n|             |\n| Изображение |\n|_____________|\n</code></pre></div>\n<h2>Локальный сервер BrowserSync</h2>\n<p>После очередного изменения кода, чтобы увидеть скомпилированный результат, нужно каждый раз вручную обновлять страницу браузера. Это очень быстро надоедает. Для того, чтобы после сохранения редактируемого файла браузер автоматически обновлял страницу можно использовать локальный сервер, такой как <a href=\"https://browsersync.io/docs/command-line\">BrowserSync</a> или <a href=\"https://github.com/ctrlaltdev/pug-server\">Pug Server</a>. Мы будем использовать сервер BrowserSync, установим его:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm i -D browser-sync</code></pre></div>\n<p>Добавим в файл <code class=\"language-text\">package.json</code> настройку, отмеченную знаком <code class=\"language-text\">+</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"pug\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pug --pretty -w src/index.pug -o dist\"</span><span class=\"token punctuation\">,</span>\n+   <span class=\"token property\">\"serve\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"browser-sync dist -w\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>Данный скрипт будет запускать сервер, а сервер будет наблюдать за всеми файлами в каталоге <code class=\"language-text\">./dist</code>. Скрипт работает в browser-sync версии 2.23.0 и выше. Аналог данного скрипта, который будет работать в browser-sync любой версии приведен ниже:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    ...\n    <span class=\"token property\">\"serve\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"browser-sync start -s dist -f dist\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>Теперь откроем еще одно окно терминала, так как в первом окне у нас запущен Pug в режиме наблюдения за файлами. Выполним во втором окне терминала команду:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm run serve</code></pre></div>\n<p>В результате, откроется браузер, в котором мы увидим нашу страницу.</p>\n<p>Теперь, каждый раз, когда в каталоге <code class=\"language-text\">src</code> происходит компиляция файлов, будет изменятся содержимое файлов в каталоге <code class=\"language-text\">dist</code>. За каталогом <code class=\"language-text\">dist</code> пристально следит сервер и как только в каком-то из файлов происходят какие-либо изменения мы будем видеть как страница браузера будет автоматически обновляться.</p>\n<h2>npm-run-all</h2>\n<p>Мы видим один неприятный момент. Для того, чтобы запустить сервер и шаблонизатор Pug в режиме наблюдения мы должны каждый раз открывать два окна терминала и выполнять команды <code class=\"language-text\">npm run pug</code> и <code class=\"language-text\">npm run serve</code>. В дальнейшем, нам понадобится запускать в режиме наблюдения препроцессор Sass, постпроцессор Postcss, компилятор Babel и др. Если на каждую такую задачу открывать окно терминала и запускать команду типа <code class=\"language-text\">npm run *</code>, то это будет рутина.</p>\n<p>Чтобы упростить процесс одновременного запуска нескольких npm-скриптов можно воспользоваться пакетами <a href=\"https://www.npmjs.com/package/concurrently\">concurrently</a> или <a href=\"https://github.com/mysticatea/npm-run-all\">npm-run-all</a>. Здесь мы воспользуемся инструментом <code class=\"language-text\">npm-run-all</code>. Сначала установим его:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm i -D npm-run-all</code></pre></div>\n<p>Затем отредактируем файл <code class=\"language-text\">package.json</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"watch:pug\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pug --pretty -w src/index.pug -o dist\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"watch:serve\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"browser-sync dist -w\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm-run-all -p watch:*\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>Мы добавили скрипт <code class=\"language-text\">\"dev\": \"npm-run-all -p watch:*\"</code>, в котором опция <code class=\"language-text\">-p</code> указывает на параллельное выполнение скриптов, следующих за этой опцией. У нас за этой опцией следует шаблон <code class=\"language-text\">watch:*</code>. Это значит, что параллельно будут выполнятся все скрипты, у которых в названии есть <code class=\"language-text\">watch:</code>. Поэтому мы изменили имена скриптов: имя <code class=\"language-text\">\"pug\"</code> заменили на <code class=\"language-text\">\"watch:pug\"</code>; имя <code class=\"language-text\">\"serve\"</code> заменили на <code class=\"language-text\">\"watch:serve\"</code>.</p>\n<p>Теперь, закроем все окна терминала кроме одного, остановим выполнение предыдущей команды в терминале сочетанием клавиш <code class=\"language-text\">Ctrl+C</code> и запустим следующую команду:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm run dev</code></pre></div>\n<p>Мы увидим, что компилятор Pug и сервер работают из одного окна терминала и с помощью всего одной команды.</p>\n<p>Возможно, кто-то скажет, что в NPM есть операторы <code class=\"language-text\">&amp;</code> и <code class=\"language-text\">&amp;&amp;</code>, с помощью которых можно выполнить все тоже самое. Но оператор <code class=\"language-text\">&amp;</code> не работает в Windows <code class=\"language-text\">cmd.exe</code>, а <code class=\"language-text\">npm-run-all -p</code> там отлично работает.</p>\n<h2>Очистка каталогов</h2>\n<p>Перед началом компиляции полезно будет очищать каталог <code class=\"language-text\">dist</code> от предыдущих файлов. Для этого будем использовать пакет <code class=\"language-text\">rimraf</code>, который является аналогом UNIX команды <code class=\"language-text\">rm -rf</code>, но работает в любой системе, которая поддерживает NPM. Установим этот пакет:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm i -D rimraf</code></pre></div>\n<p>В файл <code class=\"language-text\">package.json</code> внесем правки:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n+   <span class=\"token property\">\"clean\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rimraf dist\"</span><span class=\"token punctuation\">,</span>\n+   <span class=\"token property\">\"pug\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pug --pretty src/index.pug -o dist\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"watch:pug\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pug --pretty -w src/index.pug -o dist\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"watch:serve\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"browser-sync dist -w\"</span><span class=\"token punctuation\">,</span>\n+   <span class=\"token property\">\"dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm-run-all clean pug -p watch:*\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>Мы создали скрипт запуска для rimraf с именем <code class=\"language-text\">\"clean\"</code> и добавили этот скрипт в скрипт <code class=\"language-text\">\"dev\"</code>. Так как скрипт <code class=\"language-text\">\"clean\"</code> удаляет каталог <code class=\"language-text\">dist</code>, то при параллельном запуске <code class=\"language-text\">pug</code> и <code class=\"language-text\">browser-sync</code> последний выдает ошибку. Поэтому, мы добавили дополнительный скрипт <code class=\"language-text\">\"pug\"</code> без режима наблюдения.</p>\n<p>Теперь выполним в терминале команду:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm run dev</code></pre></div>\n<p><code class=\"language-text\">npm-run-all</code> выполнил сначала скрипт <code class=\"language-text\">\"clean\"</code>, а после как скрипт отработал запустились параллельно два скрипта: <code class=\"language-text\">\"watch:pug\"</code> и <code class=\"language-text\">\"watch:serve\"</code>.</p>\n<h2>Подключение препроцессора node-sass и постпроцессора PostCSS</h2>\n<p>Для написания стилей мы будем использовать препроцессор <a href=\"https://github.com/sass/node-sass#command-line-interface\">Sass</a>. Он позволяет нам использовать переменные, вложенности, миксины, наследование, математические операторы и др.</p>\n<p>При написании стилей мы не хотим задумываться о префиксах, которые необходимы для корректной работы некоторых браузеров, а также, мы уже сегодня хотим использовать современный CSS не думая о его поддержке всеми браузерами. В этом нам поможет PostCSS с плагином <a href=\"https://github.com/csstools/postcss-plugins/tree/main/plugin-packs/postcss-preset-env\">PostCSS Preset Env</a>. Этот плагин преобразовывает современный CSS в тот CSS, который понятен большинству браузеров, а также расставляет префиксы при необходимости.</p>\n<p>Нам еще понадобится <a href=\"https://github.com/postcss/postcss-cli\">postcss-cli</a>, чтобы запускать PostCSS из командной строки. Для начала установим все необходимые пакеты:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm i -D node-sass postcss postcss-cli postcss-preset-env</code></pre></div>\n<p>Добавим в файл <code class=\"language-text\">package.json</code> следующий код:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n+   <span class=\"token property\">\"clean\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rimraf dist tmp\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"pug\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pug --pretty src/index.pug -o dist\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"watch:pug\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pug --pretty -w src/index.pug -o dist\"</span><span class=\"token punctuation\">,</span>\n+   <span class=\"token property\">\"sass\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node-sass src/index.scss -o tmp\"</span><span class=\"token punctuation\">,</span>\n+   <span class=\"token property\">\"watch:sass\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node-sass -w src/index.scss -o tmp\"</span><span class=\"token punctuation\">,</span>\n+   <span class=\"token property\">\"watch:post\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"postcss -w tmp -d dist -u postcss-preset-env\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"watch:serve\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"browser-sync dist -w\"</span><span class=\"token punctuation\">,</span>\n+   <span class=\"token property\">\"dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm-run-all clean pug sass -p watch:*\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>Разберемся, что делают эти скрипты.</p>\n<ul>\n<li><code class=\"language-text\">\"clean\": \"rimraf dist tmp\"</code></li>\n</ul>\n<p><code class=\"language-text\">rimraf</code> удаляет каталоги <code class=\"language-text\">dist</code> и <code class=\"language-text\">tmp</code>.</p>\n<ul>\n<li><code class=\"language-text\">\"sass\": \"node-sass src/index.scss -o tmp\"</code></li>\n</ul>\n<p><code class=\"language-text\">node-sass</code> создает каталог <code class=\"language-text\">tmp</code> и однократно выполняет следующее - файл <code class=\"language-text\">src/index.scss</code> и подключенные к нему другие файлы <code class=\"language-text\">.scss</code> компилирует и помещает файл <code class=\"language-text\">tmp/index.css</code>.\nОпция <code class=\"language-text\">-o</code> указывает, что скомпилированные файлы выводятся в каталог, который указывается после этой опции. Здесь этим каталогом является временный каталог <code class=\"language-text\">tmp</code>. Временный он потому, что после компиляции препроцессором файлы должны будут обработаны постпроцессором.</p>\n<ul>\n<li><code class=\"language-text\">\"watch:sass\": \"node-sass -w src/index.scss -o tmp\"</code></li>\n</ul>\n<p><code class=\"language-text\">node-sass</code> следит за файлом <code class=\"language-text\">src/index.scss</code> и каждый раз компилирует его при изменении содержимого, а полученный файл сохраняет в каталоге <code class=\"language-text\">tmp</code> с именем <code class=\"language-text\">index.css</code>.\nСкрипт <code class=\"language-text\">\"watch:sass\"</code> не сильно отличается от скрипта <code class=\"language-text\">\"sass\"</code>. Разница в опции <code class=\"language-text\">-w</code>, которая запускает <code class=\"language-text\">node-sass</code> в режиме наблюдения. Если вызывать скрипт с опцией <code class=\"language-text\">-w</code>, то <code class=\"language-text\">node-sass</code> не сможет создать отсутствующий каталог. Поэтому сначала вызываем скрипт без опции <code class=\"language-text\">-w</code>, а потом с этой опцией.</p>\n<ul>\n<li><code class=\"language-text\">\"watch:post\": \"postcss -w tmp -d dist -u postcss-preset-env\"</code></li>\n</ul>\n<p><code class=\"language-text\">postcss</code> следит за каталогом <code class=\"language-text\">tmp</code> и если содержимое файлов в нем меняется, то файлы прогоняются через указанные плагины и помещаются в каталог <code class=\"language-text\">dist</code> с расширением <code class=\"language-text\">.css</code>\nОпция <code class=\"language-text\">-u</code> указывает, какие плагины должен использовать <code class=\"language-text\">postcss</code> - здесь <code class=\"language-text\">postcss-preset-env</code></p>\n<ul>\n<li><code class=\"language-text\">\"dev\": \"npm-run-all clean sass -p watch:*\"</code></li>\n</ul>\n<p><code class=\"language-text\">npm-run-all</code> запускает последовательно скрипт <code class=\"language-text\">clean</code> потом <code class=\"language-text\">sass</code>, затем запускает параллельно (<code class=\"language-text\">-p</code>) скрипты, у которых имя начинается на <code class=\"language-text\">watch:</code></p>\n<p>Теперь приступим к написанию стилей. Создадим файл <code class=\"language-text\">./src/index.scss</code> и скопируем в него следующее:</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token property\"><span class=\"token variable\">$font-size</span></span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span>\n<span class=\"token property\"><span class=\"token variable\">$font-color</span></span><span class=\"token punctuation\">:</span> <span class=\"token function\">lch</span><span class=\"token punctuation\">(</span>28 99 35<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token selector\">html </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$font-size</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$font-color</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.example </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">user-select</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Теперь, в терминале запустим команду:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm run watch</code></pre></div>\n<p>В результате, исходники из каталога <code class=\"language-text\">src</code> будут откомпилированы и помещены в каталог <code class=\"language-text\">dist</code>. Файл <code class=\"language-text\">src/index.scss</code> будет откомпилирован в <code class=\"language-text\">dist/index.css</code>, у которого внутри будет следующее:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">html</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1rem<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>146<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 17<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">color</span><span class=\"token punctuation\">(</span>display-p3 0.54534 0 0.06183<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.example</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">-webkit-user-select</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">-moz-user-select</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">-ms-user-select</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">user-select</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Теперь, добавим в шаблон ссылку на откомпилированный <code class=\"language-text\">dist/index.css</code></p>\n<div class=\"gatsby-highlight\" data-language=\"pug\"><pre class=\"language-pug\"><code class=\"language-pug\"><span class=\"token keyword\">include components/button.pug</span>\n\n<span class=\"token doctype\">doctype html</span>\n<span class=\"token tag\">html</span>\n  <span class=\"token tag\">head</span>\n    <span class=\"token tag\">meta<span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">charset</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token string\">'utf-8'</span></span><span class=\"token punctuation\">)</span></span></span>\n    <span class=\"token tag\">meta<span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">name</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token string\">'viewport'</span> content<span class=\"token operator\">=</span>'width<span class=\"token operator\">=</span>device<span class=\"token operator\">-</span>width</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">initial-scale</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token number\">1.0</span>'</span><span class=\"token punctuation\">)</span></span></span>\n<span class=\"token mixin\"><span class=\"token operator\">+</span>   <span class=\"token function\">link</span><span class=\"token punctuation\">(</span>rel<span class=\"token operator\">=</span><span class=\"token string\">'stylesheet'</span> href<span class=\"token operator\">=</span><span class=\"token string\">'index.css'</span><span class=\"token punctuation\">)</span></span>\n    <span class=\"token tag\">title</span><span class=\"token punctuation\">=</span><span class=\"token code\"> <span class=\"token string\">'Быстрый запуск Pug'</span></span>\n  <span class=\"token tag\">body</span>\n    <span class=\"token tag\">h1<span class=\"token attr-class\">.name</span></span><span class=\"token punctuation\">=</span><span class=\"token code\"> <span class=\"token string\">'Код написан в шаблонизаторе Pug!'</span></span>\n    <span class=\"token mixin\"><span class=\"token name function\">+button</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span></code></pre></div>\n<p>Сохраним изменения и мы увидим, что страница браузера обновилась со стилевым оформлением:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"> _____________\n|             |\n| Изображение |\n|_____________|\n</code></pre></div>\n<h2>JavaScript</h2>\n<h3>Rollup</h3>\n<p>Для сборки JavaScript файлов будем применять сборщик <a href=\"https://www.npmjs.com/package/rollup\">Rollup</a>. Он будет объединять JavaScript модули в один файл <code class=\"language-text\">index.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm i -D rollup</code></pre></div>\n<p>Для демонстрации работы сборщика Rollup создадим файл <code class=\"language-text\">src/components/button/button.js</code> и напишем в нем функцию, которую экспортируем как модуль:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">button</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> button <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".button\"</span><span class=\"token punctuation\">)</span>\n  button<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">\"Этот текст изменил JavaScript\"</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>button<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Затем, создадим главный файл <code class=\"language-text\">src/index.js</code>, в который сделаем импорт вышеуказанного модуля:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> button <span class=\"token keyword\">from</span> <span class=\"token string\">\"./components/button.js\"</span>\n\n<span class=\"token function\">button</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Теперь укажем главному шаблону проекта <code class=\"language-text\">src/index.pug</code>, где будет расположен собранный сборщиком Rollup скрипт <code class=\"language-text\">index.js</code>. Он будет находится в каталоге <code class=\"language-text\">dist</code>. Так как это каталог сборки проекта, и, следовательно он будет корневым каталогом будущего сайта, то мы указываем, просто, имя файла <code class=\"language-text\">src='index.js'</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"pug\"><pre class=\"language-pug\"><code class=\"language-pug\"><span class=\"token keyword\">include components/button.pug</span>\n\n<span class=\"token doctype\">doctype html</span>\n<span class=\"token tag\">html</span>\n  <span class=\"token tag\">head</span>\n    <span class=\"token tag\">meta<span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">charset</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token string\">'utf-8'</span></span><span class=\"token punctuation\">)</span></span></span>\n    <span class=\"token tag\">meta<span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">name</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token string\">'viewport'</span> content<span class=\"token operator\">=</span>'width<span class=\"token operator\">=</span>device<span class=\"token operator\">-</span>width</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">initial-scale</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token number\">1.0</span>'</span><span class=\"token punctuation\">)</span></span></span>\n    <span class=\"token tag\">link<span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">rel</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token string\">'stylesheet'</span> href<span class=\"token operator\">=</span><span class=\"token string\">'index.css'</span></span><span class=\"token punctuation\">)</span></span></span>\n<span class=\"token mixin\"><span class=\"token operator\">+</span>   <span class=\"token function\">script</span><span class=\"token punctuation\">(</span>defer src<span class=\"token operator\">=</span><span class=\"token string\">'index.js'</span><span class=\"token punctuation\">)</span></span>\n    <span class=\"token tag\">title</span><span class=\"token punctuation\">=</span><span class=\"token code\"> <span class=\"token string\">'Быстрый запуск Pug'</span></span>\n  <span class=\"token tag\">body</span>\n    <span class=\"token tag\">h1<span class=\"token attr-class\">.name</span></span><span class=\"token punctuation\">=</span><span class=\"token code\"> <span class=\"token string\">'Код написан в шаблонизаторе Pug!'</span></span>\n    <span class=\"token mixin\"><span class=\"token name function\">+button</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span></code></pre></div>\n<p>Добавим в файл <code class=\"language-text\">package.json</code> скрипт запуска для Rollup:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"clean\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rimraf dist tmp\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"pug\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pug --pretty src/index.pug -o dist\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"watch:pug\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pug --pretty src/index.pug -o dist\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"sass\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node-sass src/index.scss -o tmp\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"watch:sass\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node-sass -w src/index.scss -o tmp\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"watch:post\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"postcss -w tmp -d dist -u postcss-preset-env\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"watch:serve\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"browser-sync dist -w\"</span><span class=\"token punctuation\">,</span>\n+   <span class=\"token property\">\"watch:rollup\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rollup -w -c rollup.config.js\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm-run-all clean pug sass -p watch:*\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"echo \\\"There's nothing yet, but you can contribute\\\" &amp;&amp; exit 1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>В скрипте <code class=\"language-text\">\"watch:rollup\"</code> параметр <code class=\"language-text\">-w</code> (или<code class=\"language-text\">--watch</code>) сообщает сборщику, что он должен работать в режиме наблюдения, а параметр <code class=\"language-text\">-c</code> (или <code class=\"language-text\">--config</code>) говорит, что есть файл настроек и имя ему <code class=\"language-text\">rollup.config.js</code>.</p>\n<p>Раз указан файл настроек <code class=\"language-text\">rollup.config.js</code>, то создадим его в корне проекта и напишем в нем следующее:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">input</span><span class=\"token operator\">:</span> <span class=\"token string\">\"src/index.js\"</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token literal-property property\">watch</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">include</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./src/**\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">clearScreen</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token literal-property property\">output</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">file</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist/index.js\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> <span class=\"token string\">\"iife\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Свойство <code class=\"language-text\">input</code> указывает путь к главному скрипту проекта, с которого Rollup начнет собирать все скрипты в один конечный файл-бандл. Адрес этого бандла указан в свойстве <code class=\"language-text\">file</code> объекта <code class=\"language-text\">output</code>. В этом же объекте свойство <code class=\"language-text\">format</code> указывает на формат вывода файла. Здесь указан формат <code class=\"language-text\">'iife'</code>, что превращает код выходного файла в <a href=\"https://benalman.com/news/2010/11/immediately-invoked-function-expression/\">немедленно вызываемую функцию</a> (IIFE). Более подробно о параметре <code class=\"language-text\">format</code> <a href=\"https://rollupjs.org/guide/en/#outputformat\">см. документацию</a>.</p>\n<p>Для режима наблюдения существует множество настроек. Ознакомиться с ними можно в <a href=\"https://rollupjs.org/guide/en/#watch-options\">документации</a>. В нашем же файле свойство <code class=\"language-text\">include</code> ограничивает область наблюдения каталогом <code class=\"language-text\">src</code>, а свойство <code class=\"language-text\">clearScreen</code> запрещает очистку экрана при перезапуске сборщика Rollup.</p>\n<p>Сохраним все изменения и перезапустим проект</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm run dev</code></pre></div>\n<p>мы увидим :</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"> _____________\n|             |\n| Изображение |\n|_____________|\n</code></pre></div>\n<h2>Изображения</h2>\n<p>Одной из главных причин медленной загрузки сайта является большой объем контента с изображениями. Для того, чтобы сайт загружался быстрее нужно максимально оптимизировать эти изображения. Оптимизация изображений подразумевает, как минимум, уменьшение размера файлов при сохранении визуального качества. Чтобы не заниматься этим вручную мы автоматизируем этот процесс. Для автоматического сжатия можно использовать такие инструменты как ImageMagick, <a href=\"https://github.com/jcupitt/libvips\">libvips</a> или <a href=\"https://github.com/imagemin/imagemin-cli\">imagemin</a>. Мы воспользуемся последним.</p>\n<h3>imagemin</h3>\n<p>Imagemin — популярный модуль сжатия изображений. Имеет расширения:</p>\n<ul>\n<li><a href=\"https://github.com/imagemin/imagemin-webp\">imagemin-webp</a> для преобразования в WebP</li>\n</ul>\n<p>Установим <code class=\"language-text\">imagemin-cli</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm i -D imagemin-cli</code></pre></div>\n<p>Добавим в файл <code class=\"language-text\">package.json</code> следующий код:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"clean\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rimraf dist tmp\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"pug\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pug --pretty src/index.pug -o dist\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"watch:pug\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pug --pretty src/index.pug -o dist\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"sass\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node-sass src/index.scss -o tmp\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"watch:sass\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node-sass -w src/index.scss -o tmp\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"watch:post\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"postcss -w tmp -d dist -u postcss-preset-env\"</span><span class=\"token punctuation\">,</span>\n+   <span class=\"token property\">\"img\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"imagemin src/pages/**/images/* src/images/* -o dist/images\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"watch:serve\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"browser-sync dist -w\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"watch:rollup\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rollup --watch -c rollup.config.js\"</span><span class=\"token punctuation\">,</span>\n+   <span class=\"token property\">\"dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm-run-all clean pug sass img -p watch:*\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"echo \\\"There's nothing yet, but you can contribute\\\" &amp;&amp; exit 1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>Скрипт <code class=\"language-text\">\"img\"</code> указывает <code class=\"language-text\">imagemin</code> найти и сжать все изображения в <code class=\"language-text\">src/pages/**/images/*</code> и <code class=\"language-text\">src/images/*</code> и поместить их в <code class=\"language-text\">dist/images</code>. Более подробные настройки можно посмотреть в <a href=\"https://github.com/imagemin/imagemin-cli#usage\">документации</a>.</p>\n<h3>SVGO</h3>\n<p>Обычно, SVG изображения содержат избыточный код, который любят оставлять редакторы графики. <a href=\"https://github.com/svg/svgo\">SVGO</a> минимизирует файлы SVG удаляя тот самый ненужный код. Существует онлайн инструмент по оптимизации SVG файлов и кода - <a href=\"https://jakearchibald.github.io/svgomg/\">SVGOMG</a>. Также, существуют плагины: для PostCSS - <a href=\"https://www.npmjs.com/package/postcss-svgo\">postcss-svgo</a>; для Rollup - <a href=\"https://github.com/porsager/rollup-plugin-svgo\">rollup-plugin-svgo</a>.</p>\n<p>Мы будем использовать SVGO, который можно <a href=\"https://www.npmjs.com/package/svgo\">установить как CLI</a>:</p>\n<p>npm i -D svgo</p>\n<p>Настроим <code class=\"language-text\">package.json</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  ...\n  <span class=\"token property\">\"watch:svg\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"svgo -f src/assets/svg -o dist/svg\"</span><span class=\"token punctuation\">,</span>\n  ...\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Это значит, что все файлы с расширением <code class=\"language-text\">.svg</code> будут взяты из каталога <code class=\"language-text\">src/assets/svg</code>, оптимизированы и помещены в каталог <code class=\"language-text\">dist/svg</code>, который будет создан при его отсутствии.</p>\n<p>Создадим каталог <code class=\"language-text\">src/assets/svg</code> и поместим туда несколько файлов <code class=\"language-text\">.svg</code>, взять их можно <a href=\"https://fonts.google.com/icons?selected=Material+Icons&#x26;icon.set=Material+Symbols&#x26;icon.query=wh\">здесь</a>. Если мы скачаем значок <code class=\"language-text\">email_black_24dp</code> в виде файла SVG и откроем этот файл в любом текстовом редакторе, то мы увидим следующее:</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>svg</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2000/svg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>24px<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">viewBox</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0 0 24 24<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>24px<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">fill</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#000000<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>path</span> <span class=\"token attr-name\">d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>M0 0h24v24H0V0z<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">fill</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>none<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>path</span> <span class=\"token attr-name\">d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-.4 4.25l-7.07 4.42c-.32.2-.74.2-1.06 0L4.4 8.25c-.25-.16-.4-.43-.4-.72 0-.67.73-1.07 1.3-.72L12 11l6.7-4.19c.57-.35 1.3.05 1.3.72 0 .29-.15.56-.4.72z<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>svg</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Чтобы значок гибко подстраивался под размер шрифта заменим значения атрибутов <code class=\"language-text\">height</code> и <code class=\"language-text\">width</code> с <code class=\"language-text\">24px</code> на <code class=\"language-text\">1em</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>svg</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2000/svg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1em<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">viewBox</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0 0 24 24<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1em<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">fill</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#000000<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>&lt;path ....</code></pre></div>\n<p>и сохраним этот файл. То же самое проделаем с другими файлами.</p>\n<p>Затем в файл <code class=\"language-text\">src/index.pug</code> добавим следующее:</p>\n<div class=\"gatsby-highlight\" data-language=\"pug\"><pre class=\"language-pug\"><code class=\"language-pug\">  <span class=\"token tag\">body</span>\n    <span class=\"token tag\">h1<span class=\"token attr-class\">.name</span></span><span class=\"token punctuation\">=</span><span class=\"token code\"> <span class=\"token string\">'Код написан в шаблонизаторе Pug!'</span></span>\n    <span class=\"token mixin\"><span class=\"token name function\">+button</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span>\n    <span class=\"token tag\">p<span class=\"token attr-class\">.text</span></span><span class=\"token punctuation\">=</span><span class=\"token code\"> <span class=\"token string\">'Нажми кнопку'</span></span>\n<span class=\"token mixin\"><span class=\"token operator\">+</span>   p<span class=\"token punctuation\">.</span>text<span class=\"token operator\">=</span> <span class=\"token string\">'Если что-то не так звони по телефону:'</span></span>\n<span class=\"token mixin\"><span class=\"token operator\">+</span>   a<span class=\"token punctuation\">.</span>phone<span class=\"token operator\">-</span><span class=\"token function\">link</span><span class=\"token punctuation\">(</span>href<span class=\"token operator\">=</span><span class=\"token string\">'tel:+79189999999'</span><span class=\"token punctuation\">)</span></span>\n<span class=\"token mixin\"><span class=\"token operator\">+</span>     img<span class=\"token punctuation\">.</span>icon<span class=\"token operator\">-</span><span class=\"token function\">phone</span><span class=\"token punctuation\">(</span>src<span class=\"token operator\">=</span><span class=\"token string\">'svg/phone_black_24dp.svg'</span><span class=\"token punctuation\">)</span></span>\n<span class=\"token mixin\"><span class=\"token operator\">+</span>     <span class=\"token punctuation\">.</span>phone<span class=\"token operator\">-</span>number<span class=\"token operator\">=</span><span class=\"token string\">'+79189999999'</span></span></code></pre></div>\n<p>В уже существующий файл <code class=\"language-text\">src/index.scss</code> добавим:</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token selector\">.phone-link </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$font-color</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.icon-phone </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 2.5 <span class=\"token operator\">*</span> <span class=\"token variable\">$font-size</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 2.5 <span class=\"token operator\">*</span> <span class=\"token variable\">$font-size</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.phone-number </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 2.4 <span class=\"token operator\">*</span> <span class=\"token variable\">$font-size</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Запустим сборку:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm run dev</code></pre></div>\n<p>В окне браузера мы увидим следующее:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"> _____________\n|             |\n| Изображение |\n|_____________|\n</code></pre></div>\n<h2>svg-sprite-generator</h2>\n<p><a href=\"https://www.npmjs.com/package/svg-sprite-generator\">svg-sprite-generator</a> - генератор SVG-спрайтов, который из отдельных файлов SVG создает один файл-спрайт.</p>\n<p>Установим пакет:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm i -D svg-sprite-generator</code></pre></div>\n<p>Напишем настройки в <code class=\"language-text\">package.json</code></p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"clean\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rimraf dist tmp\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"pug\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pug --pretty src/pages/home/index.pug -o dist\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"watch:pug\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"pug -w --pretty src/pages/home/index.pug -o dist\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"sass\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node-sass src/pages/home/index.scss -o tmp\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"watch:sass\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node-sass -w src/pages/home/index.scss -o tmp\"</span><span class=\"token punctuation\">,</span>\n+   <span class=\"token property\">\"watch:svg\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"svgo -f src/assets/svg -o dist/svg &amp;&amp; svg-sprite-generate -d dist/svg -o dist/svg/sprite.svg\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"watch:post\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"postcss -w tmp/index.css -d dist -u postcss-preset-env\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"img\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"imagemin src/pages/**/images/* src/images/* -o dist/images\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"watch:serve\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"browser-sync dist -w\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"watch:rollup\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rollup --watch -c rollup.config.js\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm-run-all clean pug sass img -p watch:*\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"echo \\\"There's nothing yet, but you can contribute\\\" &amp;&amp; exit 1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>С помощью цепочки из операторов <code class=\"language-text\">&amp;&amp;</code> можно последовательно запускать различные скрипты. Так в скрипте <code class=\"language-text\">\"watch:svg\"</code> мы добавим через <code class=\"language-text\">&amp;&amp;</code> другой скрипт. Это значит, что после успешного выполнения кода <code class=\"language-text\">-f src/assets/svg -o dist/svg</code> будет выполнен код <code class=\"language-text\">svg-sprite-generate -d dist/svg -o dist/svg/sprite.svg</code>, который означает, что все файлы с расширением <code class=\"language-text\">.svg</code> будут взяты из каталога <code class=\"language-text\">dist/svg</code>, объединены в спрайт <code class=\"language-text\">sprite.svg</code> и этот спрайт будет помещен в этот же каталог.</p>\n<p>Выполним сборку всего проекта:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm run dev</code></pre></div>\n<p>Мы обнаружим в каталоге <code class=\"language-text\">dist/svg/</code> новый файл <code class=\"language-text\">sprite.svg</code>. Спрайт внутри выглядит, примерно, так:</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>svg</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2000/svg<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>symbol</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email_black_24dp<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>path</span> <span class=\"token attr-name\">d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>M0 0h24v24H0V0z<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">fill</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>none<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>path</span> <span class=\"token attr-name\">d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2...<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>symbol</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>symbol</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>phone_black_24dp<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>path</span> <span class=\"token attr-name\">d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>M0 0h24v24H0V0z<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">fill</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>none<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>path</span> <span class=\"token attr-name\">d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>m19.23 15.26-2.54-.29a1.99 1.99 0 0 0-1.64.57l-1.84 1.84a15.045 15.045 0 0 1-6.59-...<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>symbol</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>symbol</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>whatsapp_black_24dp<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>path</span> <span class=\"token attr-name\">d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>M0 0h24v24H0z<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>g</span> <span class=\"token attr-name\">fill</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>none<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>path</span> <span class=\"token attr-name\">d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>M0 0h24v24H0z<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>g</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>path</span> <span class=\"token attr-name\">d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>M19.05 4.91A9.816 9.816 0 0 0 12.04 2c-5.46 0-9.91 4.45-9.91 9...<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>symbol</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>svg</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Здесь в один спрайт упаковано три файла SVG. Код каждого отдельного файла SVG заключен между тегами <symbol>, а это значит, что значки не будут отображаться если мы попробуем вызвать отдельный элемент спрайта вот так: <code class=\"language-text\">&lt;img src=\"svg/sprite.svg#email_black_24dp\"/></code>. Отобразить нужный значок можно, если его вызвать с помощью команды <use> по уникальному идентификатору. Соответственно, тэг <use> должен быть обернут тегом <svg>:</p>\n<div class=\"gatsby-highlight\" data-language=\"pug\"><pre class=\"language-pug\"><code class=\"language-pug\">    <span class=\"token tag\">p<span class=\"token attr-class\">.text</span></span><span class=\"token punctuation\">=</span><span class=\"token code\"> <span class=\"token string\">'или скинь на мыло:'</span></span>\n    <span class=\"token tag\">a<span class=\"token attr-class\">.email-link</span><span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">href</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token string\">'mailto:info@jinv.ru'</span> title<span class=\"token operator\">=</span><span class=\"token string\">'Написать письмо'</span></span><span class=\"token punctuation\">)</span></span></span>\n      <span class=\"token tag\">svg<span class=\"token attr-class\">.icon</span><span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">role</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token string\">'img'</span></span><span class=\"token punctuation\">)</span></span></span>\n        <span class=\"token tag\">use<span class=\"token attributes\"><span class=\"token punctuation\">(</span><span class=\"token attr-name\">href</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\"><span class=\"token string\">'svg/sprite.svg#email_black_24dp'</span></span><span class=\"token punctuation\">)</span></span></span>\n      <span class=\"token tag\"><span class=\"token attr-class\">.email-address</span></span><span class=\"token punctuation\">=</span><span class=\"token code\"><span class=\"token string\">'info@jinv.ru'</span></span></code></pre></div>\n<p>Стилизуем данный код в файле <code class=\"language-text\">src/index.scss</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token selector\">.email-link </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$font-color</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>:hover </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> underline<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> bisque<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.icon </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 2.5 <span class=\"token operator\">*</span> <span class=\"token variable\">$font-size</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 2.5 <span class=\"token operator\">*</span> <span class=\"token variable\">$font-size</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.icon > use </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>1.6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.email-address </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 2 <span class=\"token operator\">*</span> <span class=\"token variable\">$font-size</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Запустим сборку:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm run dev</code></pre></div>\n<p>В окне браузера мы увидим следующее:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"> _____________\n|             |\n| Изображение |\n|_____________|\n</code></pre></div>","frontmatter":{"title":"Настройка среды разработки из NPM модулей для создания статического сайта","date":"09 August 2022","update":null,"description":"Установка и настройка сборки из NPM модулей, которая позволит создавать статические страницы сайта используя шаблонизатор Pug, препроцессор Sass, язык JavaScript и разметку Markdown"}}},"pageContext":{"slug":"/Sozdanie-saytov/Nastrojka-NPM-dlya-staticheskogo-sajta/","previous":{"fields":{"slug":"/Express/Shablonizator-Pug/"},"frontmatter":{"title":"Шаблонизатор PugJS"}},"next":null}},"staticQueryHashes":["3913406117","63159454"]}