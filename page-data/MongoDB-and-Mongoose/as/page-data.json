{"componentChunkName":"component---src-templates-blog-post-js","path":"/MongoDB-and-Mongoose/as/","result":{"data":{"site":{"id":"Site","siteMetadata":{"title":"jinv.ru"}},"markdownRemark":{"id":"8712d02d-a2b5-5665-b9e7-86c3694ea5c8","excerpt":"Конечная точка API является  Строка даты допустима, если может быть успешно проанализирована с помощью  (JS). Обратите внимание, что метка времени unix должна…","html":"<ol>\n<li>Конечная точка API является <code class=\"language-text\">GET [project_url]/api/timestamp/:date_string?</code></li>\n<li>Строка даты допустима, если может быть успешно проанализирована с помощью <code class=\"language-text\">new Date(date_string)</code> (JS). Обратите внимание, что метка времени unix должна быть целым числом (не строкой), задающая миллисекунды. В нашем тесте мы будем использовать строки дат, соответствующие стандарту ISO-8601 (например, “2016-11-20”), поскольку это обеспечит временную метку UTC.</li>\n<li>Если строка даты пуста, она должна быть эквивалентна триггеру <code class=\"language-text\">new Date()</code>, то есть служба использует текущую метку времени.</li>\n<li>Если строка даты допустима, api возвращает JSON, имеющий структуру <code class=\"language-text\">{&quot;unix&quot;: &lt;date.getTime()&gt;, &quot;utc&quot; : &lt;date.toUTCString()&gt; }</code> например, <code class=\"language-text\">{&quot;unix&quot;: 1479663089000 ,&quot;utc&quot;: &quot;Sun, 20 Nov 2016 17:31:29 GMT&quot;}</code>.</li>\n<li>Если строка даты недопустима, api возвращает JSON, имеющий структуру <code class=\"language-text\">{&quot;unix&quot;: null, &quot;utc&quot; : &quot;Invalid Date&quot; }</code>. Это то, что вы получаете от функций манипулирования датой, используемых выше.</li>\n</ol>\n<p>Пример использования:</p>\n<ul>\n<li><a href=\"https://curse-arrow.glitch.me/api/timestamp/2015-12-25\">https://curse-arrow.glitch.me/api/timestamp/2015-12-25</a></li>\n<li><a href=\"https://curse-arrow.glitch.me/api/timestamp/1450137600000\">https://curse-arrow.glitch.me/api/timestamp/1450137600000</a></li>\n</ul>\n<p>Пример вывода:</p>\n<ul>\n<li>{ “unix”: 1450137600, “natural”: “December 15, 2015” }</li>\n</ul>\n<p>Он должен обрабатывать правильную дату и возвращать правильную метку времени unix\nОн должен обрабатывать правильную дату и возвращать правильную строку UTC\nОн должен обрабатывать правильную дату unix и возвращать правильную метку времени unix\nОн должен вернуть сообщение об ошибке для недопустимой даты\nОн должен обрабатывать пустой параметр даты и возвращать текущее время в формате unix\nОн должен обрабатывать пустой параметр даты и возвращать текущее время в формате UTC</p>","frontmatter":{"title":"","date":null,"description":null}}},"pageContext":{"slug":"/MongoDB-and-Mongoose/as/","previous":{"fields":{"slug":"/MongoDB-and-Mongoose/as2/"},"frontmatter":{"title":""}},"next":{"fields":{"slug":"/MongoDB-and-Mongoose/MongoDB-and-Mongoose/"},"frontmatter":{"title":"Основы MongoDB и Mongoose"}}}}}